- hosts: all
  tasks:
    - name: hack around juju's reluctance to deploy misnamed directories
      copy:
        src: "/home/ubuntu/{{ zuul.project.src_dir }}/"
        dest: "/home/ubuntu/{{ zuul.project.src_dir | replace('charm-', '') }}"
        remote_src: yes
    - name: 'install crashdump'
      become: true
      snap:
        name: juju-crashdump
        classic: yes
      register: result
      until: result is not failed
      retries: 10
      delay: 10
    # Setup Juju
    - name: 'install juju'
      become: true
      snap:
        name: juju
        classic: yes
        channel: 2.9/stable
      register: result
      until: result is not failed
      retries: 10
      delay: 10
    - name: Install libpq-dev
      become: true
      apt:
         name: libpq-dev
    - name: Install libmysqlclient-dev
      become: true
      apt:
        name: libmysqlclient-dev
    - name: Install libxml2-dev
      become: true
      apt:
        name: libxml2-dev
    - name: Install libxslt1-dev
      become: true
      apt:
        name: libxslt1-dev
    - name: Render juju clouds.yaml
      template:
        src: clouds.yaml.j2
        dest: clouds.yaml
    - name: Add cloud
      command: /snap/bin/juju add-cloud --client {{ serverstack_cloud.region_name }} clouds.yaml
    - name: 'render credentials.yaml'
      template:
        src: credentials.yaml.j2
        dest: credentials.yaml
    - name: Add credential
      command: /snap/bin/juju add-credential {{ serverstack_cloud.region_name }} --client -f credentials.yaml
    - name: Clone charm-test-infra
      command: git clone https://github.com/openstack-charmers/charm-test-infra /tmp/charm-test-infra
    - name: 'Bootstrap Controller'
      command: |
        /snap/bin/juju bootstrap \
          --bootstrap-constraints="virt-type=kvm cores=4 mem=8G" \
          --constraints=virt-type=kvm \
          --auto-upgrade=false \
          --model-default=/tmp/charm-test-infra/juju-configs/model-default-serverstack.yaml \
          --config=/tmp/charm-test-infra/juju-configs/controller-default.yaml \
          {{ serverstack_cloud.region_name }}/{{ serverstack_cloud.region_name }}
    - name: 'Configure cloudinit-userdata model-default'
      shell:
        cmd: |
          cat > /tmp/cloudinit-userdata.yaml << EOF
          cloudinit-userdata: |
            apt:
              conf: |
                APT {
                  Get {
                    Always-Include-Phased-Updates 'true';
                  }
                }
            preruncmd:
              - sed -i "/^ExecStart.*systemd-resolved/a Environment=SYSTEMD_LOG_LEVEL=debug" /lib/systemd/system/systemd-resolved.service
              - systemctl daemon-reload
              - systemctl restart systemd-resolved
          EOF
          /snap/bin/juju model-default /tmp/cloudinit-userdata.yaml
      args:
        executable: /bin/bash
